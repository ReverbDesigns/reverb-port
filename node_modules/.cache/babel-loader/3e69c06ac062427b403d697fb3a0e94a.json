{"ast":null,"code":"var _jsxFileName = \"/Users/jordanbell/Downloads/web components/themeforest-tYg5P6oT-trydo-creative-agency-react-template/Reverb/src/component/textgradient.jsx\";\n\nvar React = require('react');\n\nvar TextGradient = React.createClass({\n  displayName: \"TextGradient\",\n  propTypes: {\n    text: React.PropTypes.string,\n    fromColor: React.PropTypes.string,\n    toColor: React.PropTypes.string,\n    fallbackColor: React.PropTypes.string,\n    direction: React.PropTypes.oneOf(['top', 'left', 'bottom', 'right'])\n  },\n\n  getDefaultProps() {\n    return {\n      text: '',\n      fromColor: 'transparent',\n      toColor: 'transparent'\n    };\n  },\n\n  render() {\n    var {\n      text,\n      component,\n      fromColor,\n      toColor,\n      fallbackColor,\n      direction,\n      ...other\n    } = this.props;\n    var style, overStyle;\n    var isWebkit = 'WebkitTextFillColor' in document.documentElement.style;\n\n    if (isWebkit) {\n      style = {\n        display: 'inline-block',\n        color: fallbackColor || toColor,\n        background: '-webkit-linear-gradient(' + direction + ', ' + toColor + ',' + fromColor + ')',\n        WebkitBackgroundClip: 'text',\n        WebkitTextFillColor: 'transparent'\n      };\n    } else {\n      style = {\n        position: 'relative',\n        display: 'inline-block',\n        color: fallbackColor || toColor,\n        width: '100%'\n      };\n      overStyle = {\n        display: 'block',\n        mask: 'url(#svgGrad' + direction + ')',\n        color: fromColor,\n        position: 'absolute',\n        width: '100%',\n        left: 0,\n        right: 0,\n        zIndex: 1,\n        textAlign: 'inherit'\n      };\n    }\n\n    if (!isWebkit) var SvgGrad = \"\" + \"<svg height='0' width='0' style='position:absolute'>\" + \"<mask id='svgGrad\" + direction + \"' maskUnits='objectBoundingBox' maskContentUnits='objectBoundingBox'>\" + function () {\n      switch (direction) {\n        case 'right':\n          return \"<linearGradient id='g' gradientUnits='objectBoundingBox' x1='0' x2='1'>\";\n          break;\n\n        case 'left':\n          return \"<linearGradient id='g' gradientUnits='objectBoundingBox' x1='1' x2='0'>\";\n          break;\n\n        case 'bottom':\n          return \"<linearGradient id='g' gradientUnits='objectBoundingBox' y1='0' y2='1'>\";\n          break;\n\n        case 'top':\n          return \"<linearGradient id='g' gradientUnits='objectBoundingBox' y1='1' y2='0'>\";\n          break;\n      }\n    }() + \"<stop stop-color='white' offset='0' />\" + \"<stop stop-color='white' stop-opacity='0' offset='1' />\" + \"</linearGradient>\" + \"<rect x='0' y='0' width='1' height='1' fill='url(#g)' />\" + \"</mask>\" + \"</svg>\";\n\n    if (isWebkit) {\n      return (\n        /*#__PURE__*/\n        React.createElement(\"span\", Object.assign({}, other, {\n          style: style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }\n        }), text)\n      );\n    } else return (\n      /*#__PURE__*/\n      React.createElement(\"span\", Object.assign({}, other, {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: SvgGrad\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }),\n      /*#__PURE__*/\n      React.createElement(\"span\", {\n        style: overStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, text), text)\n    );\n  }\n\n});\nmodule.exports = TextGradient;","map":{"version":3,"sources":["/Users/jordanbell/Downloads/web components/themeforest-tYg5P6oT-trydo-creative-agency-react-template/Reverb/src/component/textgradient.jsx"],"names":["React","require","TextGradient","createClass","propTypes","text","PropTypes","string","fromColor","toColor","fallbackColor","direction","oneOf","getDefaultProps","render","component","other","props","style","overStyle","isWebkit","document","documentElement","display","color","background","WebkitBackgroundClip","WebkitTextFillColor","position","width","mask","left","right","zIndex","textAlign","SvgGrad","__html","module","exports"],"mappings":"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","sourcesContent":["var React = require('react');\n\nvar TextGradient = React.createClass({\n\n    propTypes: {\n        text: React.PropTypes.string,\n        fromColor: React.PropTypes.string,\n        toColor: React.PropTypes.string,\n        fallbackColor: React.PropTypes.string,\n        direction: React.PropTypes.oneOf(['top', 'left', 'bottom', 'right'])\n    },\n\n    getDefaultProps() {\n        return {\n            text: '',\n            fromColor: 'transparent',\n            toColor: 'transparent'\n        }\n    },\n\n    render() {\n        var {text, component, fromColor, toColor, fallbackColor, direction, ...other} = this.props;\n\n        var style, overStyle;\n        var isWebkit = 'WebkitTextFillColor' in document.documentElement.style;\n\n        if(isWebkit) {\n            style = {\n                display: 'inline-block',\n                color: fallbackColor || toColor,\n                background: '-webkit-linear-gradient(' + direction + ', ' + toColor + ',' + fromColor + ')',\n                WebkitBackgroundClip: 'text',\n                WebkitTextFillColor: 'transparent'\n            }\n        } else {\n            style  = {\n                position: 'relative',\n                display: 'inline-block',\n                color: fallbackColor || toColor,\n                width: '100%'\n            }\n\n            overStyle = {\n                display: 'block',\n                mask: 'url(#svgGrad' + direction +')',\n                color: fromColor,\n                position: 'absolute',\n                width: '100%',\n                left: 0,\n                right: 0,\n                zIndex: 1,\n                textAlign: 'inherit'\n            }\n        }\n\n        if(!isWebkit) var SvgGrad = \"\" +\n            \"<svg height='0' width='0' style='position:absolute'>\" +\n                \"<mask id='svgGrad\" + direction +\"' maskUnits='objectBoundingBox' maskContentUnits='objectBoundingBox'>\" +\n                    (function(){\n                        switch(direction) {\n                            case 'right':\n                                return \"<linearGradient id='g' gradientUnits='objectBoundingBox' x1='0' x2='1'>\";\n                                break;\n                            case 'left':\n                                return \"<linearGradient id='g' gradientUnits='objectBoundingBox' x1='1' x2='0'>\";\n                                break;\n                            case 'bottom':\n                                return \"<linearGradient id='g' gradientUnits='objectBoundingBox' y1='0' y2='1'>\";\n                                break;\n                            case 'top':\n                                return \"<linearGradient id='g' gradientUnits='objectBoundingBox' y1='1' y2='0'>\";\n                                break;\n                        }\n                    })() +\n                        \"<stop stop-color='white' offset='0' />\" +\n                        \"<stop stop-color='white' stop-opacity='0' offset='1' />\" +\n                    \"</linearGradient>\" +\n                    \"<rect x='0' y='0' width='1' height='1' fill='url(#g)' />\" +\n                \"</mask>\" +\n            \"</svg>\";\n\n        if(isWebkit) {\n            return (\n                <span {...other} style={style}>\n                    {text}\n                </span>\n            )\n        } else return (\n            <span {...other} style={style}>\n                <div dangerouslySetInnerHTML={{ __html: SvgGrad }} />\n                <span style={overStyle}>{text}</span>\n                {text}\n            </span>\n        );\n    }\n\n});\n\nmodule.exports = TextGradient;"]},"metadata":{},"sourceType":"module"}